<Window x:Class="Foreman.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:f="clr-namespace:Foreman"
        xmlns:c="clr-namespace:Foreman.Controls"
        xmlns:v="clr-namespace:Foreman.Views"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance {x:Type f:MainWindowViewModel}}"
        Title="{Binding WindowTitle}"
        UseLayoutRounding="True"
        TextOptions.TextFormattingMode="Display"
        Width="1200"
        Height="800"
        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
  <Window.Resources>
    <Style TargetType="{x:Type Button}">
      <Setter Property="MinWidth" Value="75"/>
      <Setter Property="MinHeight" Value="23"/>
      <Setter Property="Margin" Value="0"/>
      <Setter Property="Padding" Value="6,1"/>
    </Style>
    <DataTemplate x:Key="ItemTemplate" DataType="{x:Type f:Item}">
      <Border BorderThickness="0,0,0,1" BorderBrush="#FFF0F0F0">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
          </Grid.ColumnDefinitions>
          <Image Source="{Binding Icon}" Style="{StaticResource IconStyle}"
                 VerticalAlignment="Center"/>
          <TextBlock Grid.Column="1" Text="{Binding FriendlyName}"
                     VerticalAlignment="Center" Margin="3,0,0,0"
                     TextWrapping="Wrap"/>
        </Grid>
      </Border>
    </DataTemplate>
    <DataTemplate x:Key="RecipeTemplate" DataType="{x:Type f:Recipe}">
      <Border BorderThickness="0,0,0,1" BorderBrush="#FFF0F0F0">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
          </Grid.ColumnDefinitions>
          <CheckBox IsChecked="{Binding Enabled}" Margin="2" VerticalAlignment="Center"/>
          <Image Grid.Column="1" Source="{Binding Icon}"
                 Style="{StaticResource IconStyle}" VerticalAlignment="Center"/>
          <TextBlock Grid.Column="2" Text="{Binding FriendlyName}"
                     VerticalAlignment="Center" Margin="3,0,0,0"
                     TextWrapping="Wrap"/>
        </Grid>
      </Border>
    </DataTemplate>
    <Style x:Key="ItemListViewItemStyle" TargetType="{x:Type ListBoxItem}">
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="Padding" Value="0"/>
      <EventSetter Event="MouseMove" Handler="ItemListViewItem_MouseMove"/>
    </Style>
    <Style x:Key="RecipeListViewItemStyle" TargetType="{x:Type ListBoxItem}">
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="Padding" Value="0"/>
      <EventSetter Event="MouseMove" Handler="RecipeListViewItem_MouseMove"/>
    </Style>
  </Window.Resources>
  <Window.InputBindings>
    <KeyBinding Gesture="Ctrl+N" Command="{Binding NewGraphCommand}"/>
    <KeyBinding Gesture="Ctrl+O" Command="{Binding OpenGraphCommand}"/>
    <KeyBinding Gesture="Ctrl+S" Command="{Binding SaveGraphCommand}"/>
  </Window.InputBindings>
  <DockPanel x:Name="Root">
    <Menu DockPanel.Dock="Top">
      <MenuItem Header="_File">
        <MenuItem Header="_New graph" Command="{Binding NewGraphCommand}" InputGestureText="Ctrl+N"/>
        <MenuItem Header="_Open graph…" Command="{Binding OpenGraphCommand}" InputGestureText="Ctrl+O"/>
        <MenuItem Header="Open _recent" ItemsSource="{Binding RecentGraphs}">
          <MenuItem.ItemContainerStyle>
            <Style TargetType="{x:Type MenuItem}">
              <Setter Property="Command" Value="{Binding DataContext.LoadGraphCommand, ElementName=Root}"/>
              <Setter Property="CommandParameter" Value="{Binding}"/>
            </Style>
          </MenuItem.ItemContainerStyle>
        </MenuItem>
        <Separator/>
        <MenuItem Header="_Save graph" Command="{Binding SaveGraphCommand}" InputGestureText="Ctrl+S"/>
        <MenuItem Header="_Save graph as…" Command="{Binding SaveGraphAsCommand}"/>
        <Separator/>
        <MenuItem Header="E_xit" Command="{Binding ExitCommand}" InputGestureText="Alt+F4"/>
      </MenuItem>
      <MenuItem Header="_Graph">
        <MenuItem Header="Automatically create _missing nodes" Command="{Binding CompleteGraphCommand}"/>
        <MenuItem Header="Re_position nodes" Command="{Binding ArrangeNodesCommand}"/>
        <MenuItem Header="_Export as Image" Command="{Binding ExportImageCommand}"/>
        <Separator/>
        <MenuItem Header="_Clear" Command="{Binding ClearGraphCommand}"/>
        <MenuItem Header="_Reload" Command="{Binding ReloadGraphCommand}"/>
      </MenuItem>
      <MenuItem Header="_Data">
        <MenuItem Header="_Reload" Command="{Binding ReloadDataCommand}"/>
        <MenuItem Header="Set Factorio Directory…" Command="{Binding ChangeFactorioDirectoryCommand}"/>
        <MenuItem Header="Set Mod Directory…" Command="{Binding ChangeModDirectoryCommand}"/>
      </MenuItem>
      <MenuItem Header="_Help">
        <MenuItem Header="Show Lua Log" Command="{Binding ShowLuaLogCommand}"/>
      </MenuItem>
    </Menu>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="210"/>
        <ColumnDefinition/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition/>
      </Grid.RowDefinitions>
      <Grid Grid.Row="0" Grid.ColumnSpan="2" Margin="3" VerticalAlignment="Top">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Column="0" Header="Show production amounts as…"
                  Margin="3" VerticalAlignment="Stretch">
          <StackPanel>
            <RadioButton Margin="3" Content="Fixed Amount"
                         IsChecked="{f:EnumToBoolBinding Path=AmountType, EnumValue={x:Static f:AmountType.FixedAmount}}"
                         GroupName="Amounts"/>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <RadioButton Margin="3" Content="Rate"
                           IsChecked="{f:EnumToBoolBinding Path=AmountType, EnumValue={x:Static f:AmountType.Rate}}"
                           GroupName="Amounts"/>
              <ComboBox Grid.Column="1"
                        SelectedValue="{Binding SelectedRateUnit}"
                        SelectedValuePath="Tag"
                        VerticalAlignment="Center">
                <ComboBoxItem Tag="{x:Static f:RateUnit.PerSecond}">per Second</ComboBoxItem>
                <ComboBoxItem Tag="{x:Static f:RateUnit.PerMinute}">per Minute</ComboBoxItem>
              </ComboBox>
            </Grid>
          </StackPanel>
        </GroupBox>
        <GroupBox Grid.Column="1" Margin="3" Header="Assemblers"
                  VerticalAlignment="Stretch">
          <StackPanel>
            <CheckBox Margin="3" Content="Display Assemblers" IsChecked="{Binding ShowAssemblers}"/>
            <CheckBox Margin="3" Content="Display Miners/Pumpjacks" IsChecked="{Binding ShowMiners}"/>
          </StackPanel>
        </GroupBox>
        <Grid Grid.Column="2" Margin="3" VerticalAlignment="Stretch">
          <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <GroupBox Header="Language">
            <ComboBox ItemsSource="{Binding Languages}"
                      SelectedItem="{Binding SelectedLanguage}"
                      VerticalAlignment="Center"
                      DisplayMemberPath="LocalName"/>
          </GroupBox>
          <Button Grid.Row="1" Margin="0,3,0,0" Content="Enable/disable loaded objects"
                  Command="{Binding EnableDisableCommand}"/>
        </Grid>
        <GroupBox Grid.Column="3" Margin="3" Header="Difficulty" VerticalAlignment="Stretch">
          <StackPanel>
            <RadioButton Margin="3" Content="Normal"
                         IsChecked="{f:EnumToBoolBinding Path=Difficulty, EnumValue={x:Static v:Difficulty.Normal}}"/>
            <RadioButton Margin="3" Content="Expensive"
                         IsChecked="{f:EnumToBoolBinding Path=Difficulty, EnumValue={x:Static v:Difficulty.Expensive}}"/>
          </StackPanel>
        </GroupBox>
      </Grid>
      <TabControl Grid.Row="1" Grid.Column="0" Padding="3">
        <TabItem Header="Items">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBox Grid.Row="0" Margin="3"
                     Text="{Binding ItemFilterText, UpdateSourceTrigger=PropertyChanged}"
                     PreviewKeyDown="FilterTextBox_KeyDown"/>
            <ListBox x:Name="ItemListView" Grid.Row="1" Margin="3"
                     ItemsSource="{Binding ItemList}"
                     SelectedItem="{Binding SelectedItem}"
                     ItemTemplate="{StaticResource ItemTemplate}"
                     ItemContainerStyle="{StaticResource ItemListViewItemStyle}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled">
              <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseDoubleClick">
                  <b:InvokeCommandAction Command="{Binding AddItemsCommand}"
                                         CommandParameter="{Binding ElementName=ItemListView}"/>
                </b:EventTrigger>
                <b:KeyTrigger Key="Enter">
                  <b:InvokeCommandAction Command="{Binding AddItemsCommand}"
                                         CommandParameter="{Binding ElementName=ItemListView}"/>
                </b:KeyTrigger>
              </b:Interaction.Triggers>
            </ListBox>
            <Button x:Name="AddItemButton" Grid.Row="2" Margin="2" Content="Add Item"
                    Command="{Binding AddItemsCommand}"
                    CommandParameter="{Binding ElementName=AddItemButton}"/>
          </Grid>
        </TabItem>
        <TabItem Header="Recipes">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBox Grid.Row="0" Margin="3"
                     Text="{Binding RecipeFilterText, UpdateSourceTrigger=PropertyChanged}"
                     PreviewKeyDown="RecipeFilterTextBox_KeyDown"/>
            <c:MultiDragListBox
                     x:Name="RecipeListView" Grid.Row="1" Margin="3"
                     ItemsSource="{Binding RecipeList}"
                     ItemTemplate="{StaticResource RecipeTemplate}"
                     ItemContainerStyle="{StaticResource RecipeListViewItemStyle}"
                     SelectionMode="Extended"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled">
              <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseDoubleClick">
                  <b:InvokeCommandAction Command="{Binding AddRecipesCommand}"/>
                </b:EventTrigger>
                <b:KeyTrigger Key="Enter">
                  <b:InvokeCommandAction Command="{Binding AddRecipesCommand}"/>
                </b:KeyTrigger>
              </b:Interaction.Triggers>
              <b:Interaction.Behaviors>
                <f:SelectedItemsBehavior SelectedItems="{Binding SelectedRecipes}"/>
              </b:Interaction.Behaviors>
            </c:MultiDragListBox>
            <Button x:Name="AddRecipeButton" Grid.Row="2" Margin="2" Content="Add Recipes"
                    Command="{Binding AddRecipesCommand}"/>
          </Grid>
        </TabItem>
      </TabControl>
      <v:ProductionGraphViewer Grid.Row="1" Grid.Column="1" Margin="3"
                               DataContext="{Binding GraphViewModel}"/>
    </Grid>
  </DockPanel>
</Window>
