<UserControl x:Class="Foreman.Views.NodeOptionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:f="clr-namespace:Foreman"
             xmlns:views="clr-namespace:Foreman.Views"
             xmlns:fx="clr-namespace:Foreman.Infrastructure.Windows"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance {x:Type views:NodeOptionsViewModel}}"
             d:DesignWidth="500"
             d:DesignHeight="300">
  <UserControl.Resources>
    <fx:NegateBooleanConverter x:Key="NegateBooleanConverter"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <DataTemplate x:Key="ModuleIconTemplate" DataType="{x:Type f:Module}">
      <Image Source="{fx:Bind Icon}" Stretch="Fill"
             RenderOptions.BitmapScalingMode="Fant"/>
    </DataTemplate>

    <Style x:Key="ModuleSlotButton" TargetType="{x:Type Button}">
      <Setter Property="Background" Value="#FFEEEEEE"/>
      <Setter Property="BorderBrush" Value="#FFAAAAAA"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Padding" Value="1"/>
      <Setter Property="Width" Value="32"/>
      <Setter Property="Height" Value="32"/>
      <Setter Property="MinWidth" Value="32"/>
      <Setter Property="MinHeight" Value="32"/>
      <Setter Property="ContentTemplate" Value="{StaticResource ModuleIconTemplate}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
              <ContentPresenter/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="BorderBrush" Value="#FF336699"/>
        </Trigger>
        <Trigger Property="IsEnabled" Value="False">
          <Setter Property="Background" Value="#FFFCFCFC"/>
          <Setter Property="BorderBrush" Value="#FFEEEEEE"/>
        </Trigger>
      </Style.Triggers>
    </Style>

    <DataTemplate x:Key="ModuleSlotTemplate" DataType="{x:Type views:ModuleSlot}">
      <Grid Margin="0,0,2,2">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Button Content="{fx:Bind Module}" Style="{StaticResource ModuleSlotButton}"
                Click="OnModuleSlotClicked"/>
        <TextBox x:Name="Count" Grid.Row="1" Margin="0,2,0,0"
                 Text="{fx:Bind Count, UpdateSourceTrigger=PropertyChanged}"/>
      </Grid>
      <DataTemplate.Triggers>
        <DataTrigger Binding="{Binding IsAggregated}" Value="False">
          <Setter TargetName="Count" Property="Visibility" Value="Collapsed"/>
        </DataTrigger>
      </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="BeaconModuleList" TargetType="{x:Type ItemsControl}">
      <Setter Property="ItemTemplate" Value="{StaticResource ModuleSlotTemplate}"/>
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <UniformGrid Columns="3"/>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </UserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="100"/>
      <ColumnDefinition/>
    </Grid.ColumnDefinitions>
    <StackPanel>
      <RadioButton Margin="3" Content="Auto"
                   IsChecked="{f:EnumToBoolBinding Path=RateType, EnumValue={x:Static f:RateType.Auto}}"/>
      <RadioButton Margin="3" Content="Fixed" x:Name="FixedCheckBox"
                   IsChecked="{f:EnumToBoolBinding Path=RateType, EnumValue={x:Static f:RateType.Manual}}"/>
      <Grid IsEnabled="{Binding IsChecked, ElementName=FixedCheckBox}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <TextBox Margin="3" VerticalAlignment="Center" Text="{fx:FloatBinding Amount, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBlock Grid.Column="1" Margin="3" Text="{fx:Bind AmountUnit}" VerticalAlignment="Center"/>
      </Grid>
    </StackPanel>
    <Grid Grid.Column="1" Visibility="{Binding CanEditAssembler, Converter={StaticResource BooleanToVisibilityConverter}}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition/>
      </Grid.RowDefinitions>
      <TextBlock Grid.Row="0" Text="Assembler:" Margin="3"
                 HorizontalAlignment="Right" VerticalAlignment="Center"/>
      <Button Grid.Row="0" Grid.Column="1" Margin="2" Content="{Binding Assembler}"
              x:Name="assemblerButton" Click="OnAssemblerButtonClicked"/>

      <TextBlock Grid.Row="1" Text="Modules:" Margin="3"
                 HorizontalAlignment="Right" VerticalAlignment="Center"/>
      <Button Grid.Row="1" Grid.Column="1" Margin="2" Content="{Binding ModuleStrategy}"
              x:Name="modulesButton" Click="OnModulesButtonClicked"/>

      <Grid Grid.Row="2" Grid.Column="1" Margin="3">
        <ItemsControl ItemsSource="{Binding Modules}"
                      ItemTemplate="{StaticResource ModuleSlotTemplate}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>
      </Grid>

      <TextBlock Text="Beacon Modules:" Grid.Row="3" Margin="3"
                 HorizontalAlignment="Right" VerticalAlignment="Top"/>
      <ItemsControl Grid.Row="3" Grid.Column="1" Margin="3" ItemsSource="{Binding BeaconModules}"
                    Style="{StaticResource BeaconModuleList}"
                    IsEnabled="{fx:Bind CanOverrideBonus, Converter={StaticResource NegateBooleanConverter}}"/>
      <CheckBox Grid.Row="4" Grid.Column="1" Margin="3"
                IsChecked="{fx:Bind CanOverrideBonus}" Content="Override"/>

      <TextBlock Grid.Row="5" Margin="3" Text="Speed Bonus:"
                 HorizontalAlignment="Right" VerticalAlignment="Center"/>
      <TextBox Grid.Row="5" Grid.Column="1" Margin="3"
               Text="{fx:Bind Path=SpeedBonus, StringFormat=F2, UpdateSourceTrigger=PropertyChanged}"
               IsReadOnly="{fx:Bind CanOverrideBonus, Converter={StaticResource NegateBooleanConverter}}"/>

      <TextBlock Grid.Row="6" Margin="3" Text="Productivity Bonus:"
                 HorizontalAlignment="Right" VerticalAlignment="Center"/>
      <TextBox Grid.Row="6" Grid.Column="1" Margin="3"
               Text="{fx:Bind Path=ProductivityBonus, StringFormat=F2, UpdateSourceTrigger=PropertyChanged}"
               IsReadOnly="{fx:Bind CanOverrideBonus, Converter={StaticResource NegateBooleanConverter}}"/>

      <TextBlock Grid.Row="7" Margin="3" Text="Consumption Bonus:"
                 HorizontalAlignment="Right" VerticalAlignment="Center"/>
      <TextBox Grid.Row="7" Grid.Column="1" Margin="3"
               Text="{fx:Bind Path=ConsumptionBonus, StringFormat=F2, UpdateSourceTrigger=PropertyChanged}"
               IsReadOnly="{fx:Bind CanOverrideBonus, Converter={StaticResource NegateBooleanConverter}}"/>
    </Grid>
  </Grid>
</UserControl>
